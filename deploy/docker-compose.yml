services:
    app:
        container_name: ${APP_NAME}-app
        image: 614575055279.dkr.ecr.us-east-1.amazonaws.com/shaula:latest
        working_dir: /var/www
        restart: unless-stopped
        volumes:
            # - app-data:/var/www
            - ./:/var/www
            # - storage_files:/var/www/storage/app/public
        env_file: .env
        depends_on:
            - mysql
        networks:
            - application

    nginx:
        container_name: ${APP_NAME}-nginx
        image: nginx:alpine
        volumes:
            # - app-data:/var/www
            - ./:/var/www:ro
            # - storage_files:/var/www/storage/app/public
            - ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            - /etc/letsencrypt:/etc/letsencrypt:ro
        restart: unless-stopped
        ports:
            - ${APP_PORT}:80
            - "443:443"
        networks:
            - application
        command: '/bin/sh -c ''nginx -g "daemon off;"'''
        depends_on:
            - app


    mysql:
        container_name: ${APP_NAME}-mysql
        image: mysql:8.0
        ports:
            - 3306:3306
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./.docker/mysql:/docker-entrypoint-initdb.d
            - mysql-data:/var/lib/mysql
        restart: unless-stopped
        networks:
            - application

    redis:
        container_name: ${APP_NAME}-redis
        image: redis:alpine
        restart: unless-stopped
        ports:
            - ${REDIS_PORT}:6379
        networks:
            - application

    meilisearch:
        container_name: ${APP_NAME}-meilisearch
        image: getmeili/meilisearch:latest
        restart: unless-stopped
        ports:
            - ${MEILISEARCH_PORT}:7700
        environment:
            MEILI_MASTER_KEY: ${MEILISEARCH_KEY}
        volumes:
            - ./.meilisearch-data:/meilisearch-data
        networks:
            - application

volumes:
  #app-data:
  mysql-data:
#   storage_files:

networks:
  application:
    name: ${APP_NAME}
